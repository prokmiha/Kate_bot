import os
from aiogram import types

class Regeneration:
	def __init__(self, dp, bot):
		self.dp = dp
		self.bot = bot

	async def startup_menu(self, message: types.Message):
		keyboard = types.ReplyKeyboardMarkup(resize_keyboard=True, row_width=3)
		instruction = (types.KeyboardButton(text='–Ü–Ω—Å—Ç—Ä—É–∫—Ü—ñ—è'))
		to_buy = (types.KeyboardButton(text='–ü—Ä–∏–¥–±–∞—Ç–∏'))
		to_the_beginning = (types.KeyboardButton(text='–î–æ –ø–æ—á–∞—Ç–∫—É'))
		keyboard.add(instruction, to_buy, to_the_beginning)

		await message.answer(
			"–ü—Ä–∏–≤—ñ—Ç ü´∂üèº\n\n–î—è–∫—É—é –∑–∞ —Ç–≤–æ—é —Ü—ñ–∫–∞–≤—ñ—Å—Ç—å –¥–æ –º–æ—î—ó –ø–µ—Ä—à–æ—ó –∑–±—ñ—Ä–∫–∏ –≤—ñ—Ä—à—ñ–≤ <i><b>¬´—Ä–µ–≥–µ–Ω–µ—Ä–∞—Ü—ñ—è¬ª</b></i>.",
			reply_markup=keyboard, parse_mode='HTML')
		await message.answer("–ü–µ—Ä–µ–¥ —Ç–∏–º, —è–∫ –ø—Ä–∏–¥–±–∞—Ç–∏ —ó—ó, –æ–∑–Ω–∞–π–æ–º—Å—è, –±—É–¥—å-–ª–∞—Å–∫–∞, –∑ —ñ–Ω—Å—Ç—Ä—É–∫—Ü—ñ—î—é", reply_markup=keyboard)

	async def process_instruction(self, message: types.Message):
		await message.answer(
			"""–ó–±—ñ—Ä–∫—É  —è –Ω–∞–¥—ñ—à–ª—é —Ç–æ–±—ñ  –æ—Å–æ–±–∏—Å—Ç–æ –Ω–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É –∞–±–æ –≤ –æ—Å–æ–±–∏—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –≤ —Ç–µ–ª–µ–≥—Ä–∞–º."
			–ù–∞—Ç–∏—Å–Ω—É–≤—à–∏ –Ω–∞ –∫–Ω–æ–ø–∫—É ¬´–ü—Ä–∏–¥–±–∞—Ç–∏¬ª —Ç–∏ –∑–Ω–∞–π–¥–µ—à –≤—Å—ñ –Ω–µ–æ–±—Ö—ñ–¥–Ω—ñ —Ä–µ–∫—ñ–∑–∏—Ç–∏.
			<b>–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏, –±—É–¥—å-–ª–∞—Å–∫–∞, –Ω–∞–¥—ñ—à–ª–∏ —Å–∫—Ä—ñ–Ω—à–æ—Ç —É—Å–ø—ñ—à–Ω–æ—ó –æ–ø–µ—Ä–∞—Ü—ñ—ó –Ω–∞ –ø–æ—à—Ç—É –∞–±–æ –º–µ–Ω—ñ —É –æ—Å–æ–±–∏—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è</b> ‚ú®""",
			parse_mode='HTML')
		await message.answer(
			"–Ø–∫—â–æ —É —Ç–µ–±–µ –≤–∏–Ω–∏–∫–Ω—É—Ç—å –∑–∞–ø–∏—Ç–∞–Ω–Ω—è –∞–±–æ —Å–∫–ª–∞–¥–Ω–æ—â—ñ, —Ç–∞–∫–æ–∂ –Ω–µ —Å–æ—Ä–æ–º—Å—è –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—å –¥–æ –º–µ–Ω–µ —É –æ—Å–æ–±–∏—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è ü•∞")

	async def process_purchase(self, message: types.Message):
		keyboard_hide = types.ReplyKeyboardRemove()  # –£–¥–∞–ª—è–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É

		await message.answer(
			"""<i>–ö–æ–∂–µ–Ω –º–Ω–æ—é –Ω–∞–ø–∏—Å–∞–Ω–∏–π —Ç–≤—ñ—Ä –Ω–µ—Å–µ –≤ —Å–æ–±—ñ –≤–∞–∂–ª–∏–≤—ñ –ø–æ—Å–ª–∞–Ω–Ω—è.
		–°–ø–æ–¥—ñ–≤–∞—é—Å—å, —â–æ –∑ –Ω–∏–º–∏ —Ç–∏ –≤—ñ–¥–Ω–∞–π–¥–µ—à –∫–ª–∞–ø—Ç–∏–∫ –≤—ñ—Ä–∏, –∂–º–µ–Ω—é –Ω–∞–¥—ñ—ó —ñ –¥–≤—ñ—Å—Ç—ñ –ø º—è—Ç–¥–µ—Å—è—Ç –≥—Ä–∞–º—ñ–≤ —Ç–µ–ø–ª–∞, —â–æ –ø—Ä–∏–≤–µ–¥—É—Ç—å —Ç–µ–±–µ –¥–æ —Å–ø–æ–∫–æ—é —ñ –ª—é–±–æ–≤—ñ‚ù§Ô∏è</i>""",
			reply_markup=keyboard_hide, parse_mode="HTML")
		await message.answer(f'''–í–∞—Ä—Ç—ñ—Å—Ç—å –∑–±—ñ—Ä–∫–∏: 600 –≥—Ä–Ω. 
	–û–ø–ª–∞—Ç–∏—Ç–∏ –º–æ–∂–Ω–∞ –¥–≤–æ–º–∞ —Å–ø–æ—Å–æ–±–∞–º–∏: 

	<b>‚Ä¢ –ö–∞—Ä—Ç–∞ –º–æ–Ω–æ–±–∞–Ω–∫:</b>

		<code>{os.environ.get('CARD_1')}
	–ö–∞—Ç–µ—Ä–∏–Ω–∞ –í–æ–π–Ω–∞</code> 

	<b>‚Ä¢ –Ñ–≤—Ä–æ–ø–µ–π—Å—å–∫–∏–π —Ä–∞—Ö—É–Ω–æ–∫:</b> 

	<code>{os.environ.get('CARD_2')}
	Kateryna Voina 
	–°—É–º–∞: 15‚Ç¨</code>''', parse_mode="HTML")

		keyboard = types.InlineKeyboardMarkup()
		email_button = types.InlineKeyboardButton(text='–ü–æ—à—Ç–∞', callback_data='copy_email')
		chat_button = types.InlineKeyboardButton(text='–í –æ—Å–æ–±–∏—Å—Ç—ñ', url='https://t.me/kate_voina')
		main_menu_button = types.InlineKeyboardButton(text='–î–æ –ø–æ—á–∞—Ç–∫—É', callback_data='main_menu')
		keyboard.add(email_button, chat_button, main_menu_button)

		message_text = """–ü—ñ—Å–ª—è –æ–ø–ª–∞—Ç–∏, –Ω–∞–¥—ñ—à–ª–∏ –±—É–¥—å-–ª–∞—Å–∫–∞ —Å–∫—Ä—ñ–Ω –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –∑—Ä—É—á–Ω–∏–º –¥–ª—è —Ç–µ–±–µ —Å–ø–æ—Å–æ–±–æ–º ‚Äî –≤ –æ—Å–æ–±–∏—Å—Ç—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è —á–∏ –Ω–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É –ø–æ—à—Ç—É.

	–Ü –Ω–µ –∑–∞–±—É–≤–∞–π: —Ç–∏ ‚Äî –º–∞–≥—ñ—è. 

	–û–±—ñ–π–º–∞—é ‚ú®"""
		await message.answer(message_text, reply_markup=keyboard)

	async def copy_email_handler(self, query: types.CallbackQuery):
		email = 'regenerationpoetry@gmail.com'
		await self.bot.send_message(chat_id=query.from_user.id, text=f"–ê–¥—Ä–µ—Å–∞ –µ–ª–µ–∫—Ç—Ä–æ–Ω–Ω–æ—ó –ø–æ—à—Ç–∏: {email}")